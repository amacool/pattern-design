{"version":3,"sources":["canvas/DrawingApi.tsx","components/SettingModal/index.tsx","canvas/DrawingPanel.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DrawingObject","type","color","selected","lineColor","lineWidth","lineStyle","vertexLen","vertices","posX","posY","text","fontFamily","fontSize","getIntersectionWithPanel","X1","X2","chartRect","deltaX","deltaY","offsetX","height","copyProperties","other","applied","Object","keys","forEach","key","drawVertex","cx","drawingRect","minTime","maxTime","minVal","maxVal","vertex","minLineWidth","radius","beginPath","fillStyle","ellipse","Math","PI","fill","setLineDash","strokeStyle","moveTo","lineTo","width","stroke","fillRegion","globalAlpha","index","length","closePath","getPitchforkDrawPoints","X3","X4","X5","X6","X7","X8","X9","X10","intersection1","X11","intersection2","X12","getChannelDrawPoints","w1","h1","w2","h2","b","drawSegmentObject","dashed","drawTrendLineObject","intersection","drawRayLineObject","drawArrowObject","degree1","atan","degree2","direction","cos","sin","drawPolygonObject","i","drawPitchforkObject","drawTextObject","pos","textBaseline","font","fillText","drawChannel","drawFibonacci","h","min","pair","realVal","max","yRatioArr","colorArr","prevX","prevY","yRatio","curX","curY","applyRatio","val","toFixed","drawObject","setVertex","curVertex","prevPos","selectVertex","selectVertices","moveVertices","offsetY","timeRange","candleData","scaleMoveVertices","scaleRatioX","scaleRatioY1","scaleRatioY2","scaleBaseX","scaleBaseY1","scaleBaseY2","selectMyself","vertexSelect","getLineBounding","degree","isHitInPath","path","isPointInPath","isHitOnSegment","isHitOnRay","isHitOnLine","isHitOnEllipse","circle","sqrt","isHitOnObject","selectedVertexTemp","selectedSegment","isObjectSelected","findIndex","this","SettingModal","settingValues","setSettingValues","useState","value","setValue","useEffect","toString","$","on","e","startPosX","pageX","startPosY","pageY","top","css","slice","left","e1","curPosX","curPosY","parseInt","off","className","onClick","onChange","target","defaultProps","points","DrawingPanel","openSettingModal","setOpenSettingModal","curSelectedSegment","curSelectedObject","curSelectedVertex","setSelected","params","setParams","drawingObjects","useRef","canvasPanel","setupCanvas","useCallback","can","document","querySelector","dpr","window","devicePixelRatio","rect","getBoundingClientRect","ctx","getContext","scale","current","updateCanvas","clearRect","drawing","initCanvasPanel","handleClickOnPanel","layerX","layerY","object","objects","selectedObject","selectedVertex","selectedSegmentTemp","getSelectedObject","vertice","X","Y","getLineWidth","newObj","push","addEventListener","removeEventListener","id","style","apply","flag","applySetting","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ce6ea6b.chunk.js","sourcesContent":["\r\ntype Vertex = {\r\n  posX: number;\r\n  posY: number;\r\n  selected: boolean;\r\n}\r\n\r\nexport class DrawingObject {\r\n  type = -1; // arrow, ray, extended, trend, pitch fork, text, channel\r\n  color = 'white';\r\n  text = '';\r\n  fontFamily = 'Arial';\r\n  fontSize = 15;\r\n  selected = false;\r\n  lineColor = 'white';\r\n  lineWidth = 0;\r\n  lineStyle = -1; // ctx.setLineDash([4, 2]);\r\n  vertexLen = 0; // maximum vertex count\r\n  vertices: Vertex[] = []; // vertices list\r\n\r\n  constructor(\r\n    { type, color, selected, lineColor, lineWidth, lineStyle, vertexLen, vertices } = {\r\n      type: 0,\r\n      color: 'white',\r\n      selected: false,\r\n      lineColor: 'white',\r\n      lineWidth: 1,\r\n      lineStyle: 0,\r\n      vertexLen: 1,\r\n      vertices: [{ posX: 0, posY: 0 }],\r\n    },\r\n  ) {\r\n    this.type = type;\r\n    this.color = color;\r\n    this.selected = selected;\r\n    this.lineColor = lineColor;\r\n    this.lineWidth = lineWidth;\r\n    this.lineStyle = lineStyle;\r\n    this.vertexLen = vertexLen;\r\n    // @ts-ignore\r\n    this.vertices = vertices;\r\n  }\r\n\r\n  /**\r\n   * functions for getting intersection between panel and line\r\n   */\r\n  getIntersectionWithPanel = (X1: any, X2: any, chartRect: any) => {\r\n    const deltaX = (X2 as any).posX - (X1 as any).posX;\r\n    const deltaY = (X1 as any).posY - (X2 as any).posY;\r\n    const offsetX = (deltaX / deltaY) * (chartRect.height - (X2 as any).posY);\r\n    const X3 = {\r\n      posX: (X2 as any).posX - offsetX,\r\n      posY: chartRect.height,\r\n    };\r\n    const X4 = {\r\n      posX: (X2 as any).posX + (deltaX / deltaY) * (X2 as any).posY,\r\n      posY: 0,\r\n    };\r\n    return [X3, X4];\r\n  };\r\n\r\n  /**\r\n   * copy keys of values that are not functions from other object\r\n   */\r\n  copyProperties = (other: any) => {\r\n    const applied = {};\r\n    Object.keys({ ...other }).forEach((key: string) => {\r\n      if (typeof other[key] !== 'function' && other[key]) {\r\n        (this as any)[key] = other[key];\r\n        (applied as any)[key] = other[key];\r\n      }\r\n    });\r\n    return applied;\r\n  };\r\n\r\n  /**\r\n   * functions for drawing objects\r\n   */\r\n  drawVertex = (cx: any, drawingRect: any) => {\r\n    // drawing ellipse around vertices\r\n    if (this.selected) {\r\n      let minTime = 100000000000;\r\n      let maxTime = 0;\r\n      let minVal = 100000000000;\r\n      let maxVal = 0;\r\n      this.vertices.forEach((vertex: any) => {\r\n        const minLineWidth = this.lineWidth < 5 ? 5 : this.lineWidth;\r\n        const radius = vertex.selected ? minLineWidth + 3 : minLineWidth + 1;\r\n        cx.beginPath();\r\n        cx.fillStyle = 'white';\r\n        cx.ellipse(vertex.posX, vertex.posY, radius, radius, 0, 0, 2 * Math.PI);\r\n        cx.fill();\r\n        cx.beginPath();\r\n        cx.fillStyle = 'black';\r\n        cx.ellipse(vertex.posX, vertex.posY, radius - 2, radius - 2, 0, 0, 2 * Math.PI);\r\n        cx.fill();\r\n\r\n        if (this.type !== 7 && this.type !== 10 && vertex.selected) {\r\n          // draw cross lines\r\n          cx.lineWidth = 0.5;\r\n          cx.setLineDash([5, 5]);\r\n          cx.strokeStyle = 'white';\r\n          cx.moveTo(vertex.posX, vertex.posY);\r\n          cx.lineTo(drawingRect.width, vertex.posY);\r\n          cx.moveTo(vertex.posX, vertex.posY);\r\n          cx.lineTo(vertex.posX, drawingRect.height);\r\n          cx.stroke();\r\n          cx.setLineDash([]);\r\n        }\r\n\r\n        // get position of labels\r\n        minTime = minTime < vertex.posX ? minTime : vertex.posX;\r\n        maxTime = maxTime > vertex.posX ? maxTime : vertex.posX;\r\n        minVal = minVal < vertex.posY ? minVal : vertex.posY;\r\n        maxVal = maxVal > vertex.posY ? maxVal : vertex.posY;\r\n      });\r\n    }\r\n  };\r\n\r\n  fillRegion = (vertices: any, color: string, cx: any) => {\r\n    cx.beginPath();\r\n    if (this.lineStyle) {\r\n      cx.setLineDash([4, 2]);\r\n    } else {\r\n      cx.setLineDash([]);\r\n    }\r\n    cx.fillStyle = color;\r\n    cx.globalAlpha = 0.2;\r\n    cx.moveTo(vertices[0].posX, vertices[0].posY);\r\n    for (let index = 1; index < vertices.length; index++) {\r\n      cx.lineTo(vertices[index].posX, vertices[index].posY);\r\n    }\r\n    cx.closePath();\r\n    cx.fill();\r\n    cx.globalAlpha = 1;\r\n  };\r\n\r\n  getPitchforkDrawPoints = (X1: any, X2: any, X3: any, chartRect: any) => {\r\n    // get points for drawing lines\r\n    const X4 = {\r\n      posX: ((X2 as any).posX + (X3 as any).posX) / 2,\r\n      posY: ((X2 as any).posY + (X3 as any).posY) / 2,\r\n    };\r\n    const X5 = {\r\n      posX: ((X3 as any).posX + (X4 as any).posX) / 2,\r\n      posY: ((X3 as any).posY + (X4 as any).posY) / 2,\r\n    };\r\n    const X6 = {\r\n      posX: ((X2 as any).posX + (X4 as any).posX) / 2,\r\n      posY: ((X2 as any).posY + (X4 as any).posY) / 2,\r\n    };\r\n    const X7 = {\r\n      posX: (X5 as any).posX + ((X5 as any).posX - (X1 as any).posX),\r\n      posY: (X5 as any).posY - ((X1 as any).posY - (X5 as any).posY),\r\n    };\r\n    const X8 = {\r\n      posX: (X2 as any).posX + ((X4 as any).posX - (X1 as any).posX),\r\n      posY: (X2 as any).posY - ((X1 as any).posY - (X4 as any).posY),\r\n    };\r\n    const X9 = {\r\n      posX: (X7 as any).posX + ((X5 as any).posX - (X3 as any).posX),\r\n      posY: (X7 as any).posY + ((X5 as any).posY - (X3 as any).posY),\r\n    };\r\n    const X10 = {\r\n      posX: (X8 as any).posX - ((X2 as any).posX - (X6 as any).posX),\r\n      posY: (X8 as any).posY - ((X2 as any).posY - (X6 as any).posY),\r\n    };\r\n\r\n    // get points for filling region\r\n    const intersection1 = this.getIntersectionWithPanel(X3, X7, chartRect);\r\n    const X11 = (X1 as any).posY > (X4 as any).posY ? intersection1[1] : intersection1[0];\r\n    const intersection2 = this.getIntersectionWithPanel(X2, X8, chartRect);\r\n    const X12 = (X1 as any).posY > (X4 as any).posY ? intersection2[1] : intersection2[0];\r\n\r\n    return { X4, X5, X6, X7, X8, X9, X10, X11, X12 };\r\n  };\r\n\r\n  getChannelDrawPoints = (X1: any, X2: any, X3: any) => {\r\n    const w1 = X3.posX - X1.posX;\r\n    const h1 = X1.posY - X3.posY;\r\n    const w2 = X2.posX - X1.posX;\r\n    const h2 = X1.posY - X2.posY;\r\n    if (w2 === 0) {\r\n      return { X4: X3, X5: X3 };\r\n    }\r\n    const b = h1 - (w1 / w2) * h2;\r\n    const X4 = {\r\n      posX: X1.posX,\r\n      posY: X1.posY - b,\r\n    };\r\n    const X5 = {\r\n      posX: X2.posX,\r\n      posY: X2.posY - b,\r\n    };\r\n\r\n    return { X4, X5 };\r\n  };\r\n\r\n  drawSegmentObject = (vertices: any, lineWidth: number, dashed: number, cx: any) => {\r\n    if (dashed) {\r\n      cx.setLineDash([4, 2]);\r\n    } else {\r\n      cx.setLineDash([]);\r\n    }\r\n    cx.beginPath();\r\n    cx.strokeStyle = this.lineColor;\r\n    cx.lineWidth = lineWidth;\r\n\r\n    const X1 = vertices[0];\r\n    const X2 = vertices[1];\r\n    cx.moveTo((X1 as any).posX, (X1 as any).posY);\r\n    cx.lineTo((X2 as any).posX, (X2 as any).posY);\r\n    cx.stroke();\r\n  };\r\n\r\n  drawTrendLineObject = (cx: any, chartRect: any) => {\r\n    if (this.lineStyle) {\r\n      cx.setLineDash([4, 2]);\r\n    } else {\r\n      cx.setLineDash([]);\r\n    }\r\n    cx.beginPath();\r\n    cx.strokeStyle = this.lineColor;\r\n    cx.lineWidth = this.lineWidth;\r\n\r\n    const X1 = this.vertices[0];\r\n    const X2 = this.vertices[1];\r\n    const intersection = this.getIntersectionWithPanel(X1, X2, chartRect);\r\n    const X3 = intersection[0];\r\n    const X4 = intersection[1];\r\n    cx.moveTo((X3 as any).posX, (X3 as any).posY);\r\n    cx.lineTo((X4 as any).posX, (X4 as any).posY);\r\n    cx.stroke();\r\n  };\r\n\r\n  drawRayLineObject = (vertices: any, cx: any, chartRect: any) => {\r\n    if (this.lineStyle) {\r\n      cx.setLineDash([4, 2]);\r\n    } else {\r\n      cx.setLineDash([]);\r\n    }\r\n    cx.beginPath();\r\n    cx.strokeStyle = this.lineColor;\r\n    cx.lineWidth = this.lineWidth;\r\n\r\n    const X1 = vertices[0];\r\n    const X2 = vertices[1];\r\n    const intersection = this.getIntersectionWithPanel(X1, X2, chartRect);\r\n    const X3 = intersection[0];\r\n    const X4 = intersection[1];\r\n    cx.moveTo((X1 as any).posX, (X1 as any).posY);\r\n    if ((X2 as any).posY < (X1 as any).posY) {\r\n      cx.lineTo((X4 as any).posX, (X4 as any).posY);\r\n    } else {\r\n      cx.lineTo((X3 as any).posX, (X3 as any).posY);\r\n    }\r\n    cx.stroke();\r\n  };\r\n\r\n  drawArrowObject = (cx: any) => {\r\n    if (this.lineStyle) {\r\n      cx.setLineDash([4, 2]);\r\n    } else {\r\n      cx.setLineDash([]);\r\n    }\r\n    cx.beginPath();\r\n    cx.strokeStyle = this.lineColor;\r\n    cx.lineWidth = this.lineWidth;\r\n\r\n    const X1 = this.vertices[0];\r\n    const X2 = this.vertices[1];\r\n    const arrowLen = 20;\r\n    const deltaX = (X2 as any).posX - (X1 as any).posX;\r\n    const deltaY = (X1 as any).posY - (X2 as any).posY;\r\n    const degree1 = Math.atan(deltaY / deltaX);\r\n    const degree2 = Math.PI / 8;\r\n    const direction = (X1 as any).posX < (X2 as any).posX ? 1 : -1;\r\n    const X3 = {\r\n      posX: (X2 as any).posX - direction * arrowLen * Math.cos(degree1 + degree2),\r\n      posY: (X2 as any).posY + direction * arrowLen * Math.sin(degree1 + degree2),\r\n    };\r\n    const X4 = {\r\n      posX: (X2 as any).posX - direction * arrowLen * Math.cos(degree1 - degree2),\r\n      posY: (X2 as any).posY + direction * arrowLen * Math.sin(degree1 - degree2),\r\n    };\r\n\r\n    // draw segment\r\n    cx.moveTo((X1 as any).posX, (X1 as any).posY);\r\n    cx.lineTo((X2 as any).posX, (X2 as any).posY);\r\n    // draw arrow\r\n    cx.moveTo((X2 as any).posX, (X2 as any).posY);\r\n    cx.lineTo((X3 as any).posX, (X3 as any).posY);\r\n    cx.moveTo((X2 as any).posX, (X2 as any).posY);\r\n    cx.lineTo((X4 as any).posX, (X4 as any).posY);\r\n    cx.stroke();\r\n  };\r\n\r\n  drawPolygonObject = (cx: CanvasRenderingContext2D) => {\r\n    if (this.lineStyle) {\r\n      cx.setLineDash([4, 2]);\r\n    } else {\r\n      cx.setLineDash([]);\r\n    }\r\n    cx.beginPath();\r\n    cx.strokeStyle = this.lineColor;\r\n    cx.lineWidth = this.lineWidth;\r\n    cx.moveTo((this.vertices[0] as any).posX, (this.vertices[0] as any).posY);\r\n    for (let i = 1; i < this.vertices.length; i++) {\r\n      const vertex: any = this.vertices[i];\r\n      cx.lineTo(vertex.posX, vertex.posY);\r\n    }\r\n    // make the object closed\r\n    cx.closePath();\r\n    cx.stroke();\r\n    cx.fillStyle = '#E5EEFF';\r\n    cx.fill();\r\n\r\n    // drawing ellipse around vertices\r\n    if (this.selected) {\r\n      for (const vertex of this.vertices) {\r\n        const radius = (vertex as any).selected ? this.lineWidth * 2 : this.lineWidth * 2 - 2;\r\n        cx.beginPath();\r\n        cx.fillStyle = 'white';\r\n        cx.ellipse((vertex as any).posX, (vertex as any).posY, radius, radius, 0, 0, 2 * Math.PI);\r\n        cx.fill();\r\n        cx.beginPath();\r\n        cx.fillStyle = 'black';\r\n        cx.ellipse((vertex as any).posX, (vertex as any).posY, radius - 2, radius - 2, 0, 0, 2 * Math.PI);\r\n        cx.fill();\r\n      }\r\n    }\r\n  };\r\n\r\n  drawPitchforkObject = (cx: any, chartRect: any) => {\r\n    const curVertexLen = this.vertices.length;\r\n    if (curVertexLen < 3) {\r\n      this.drawRayLineObject(this.vertices, cx, chartRect);\r\n    } else {\r\n      // draw lines\r\n      const X1 = this.vertices[0];\r\n      const X2 = this.vertices[1];\r\n      const X3 = this.vertices[2];\r\n      const { X4, X5, X6, X7, X8, X9, X10, X11, X12 } = this.getPitchforkDrawPoints(X1, X2, X3, chartRect);\r\n      this.drawSegmentObject([X2, X3], this.lineWidth, this.lineStyle, cx);\r\n      this.drawRayLineObject([X1, X4], cx, chartRect);\r\n      this.drawRayLineObject([X3, X7], cx, chartRect);\r\n      this.drawRayLineObject([X2, X8], cx, chartRect);\r\n      this.drawRayLineObject([X5, X9], cx, chartRect);\r\n      this.drawRayLineObject([X6, X10], cx, chartRect);\r\n\r\n      // fill region\r\n      this.fillRegion([X3, X2, X12, X11], this.lineColor, cx);\r\n    }\r\n  };\r\n\r\n  drawTextObject = (cx: any) => {\r\n    const pos = this.vertices[0];\r\n    cx.textBaseline = 'top';\r\n    cx.fillStyle = this.color;\r\n    cx.font = `${this.fontSize}px ${this.fontFamily}`;\r\n    cx.fillText(this.text, (pos as any).posX, (pos as any).posY);\r\n  };\r\n\r\n  drawChannel = (cx: any) => {\r\n    cx.setLineDash([]);\r\n    cx.beginPath();\r\n    cx.strokeStyle = this.lineColor;\r\n    cx.lineWidth = this.lineWidth;\r\n    const X1 = this.vertices[0] as any;\r\n    const X2 = this.vertices[1] as any;\r\n    this.drawSegmentObject([X1, X2], this.lineWidth, this.lineStyle, cx);\r\n    if (this.vertices.length === 3) {\r\n      const X3 = this.vertices[2] as any;\r\n      const { X4, X5 } = this.getChannelDrawPoints(X1, X2, X3);\r\n      X3.posX = (X4.posX + X5.posX) / 2;\r\n      X3.posY = (X4.posY + X5.posY) / 2;\r\n      this.drawSegmentObject([X4, X5], this.lineWidth, this.lineStyle, cx);\r\n      this.fillRegion([X1, X2, X5, X4], this.lineColor, cx);\r\n    }\r\n  };\r\n\r\n  drawFibonacci = (cx: any) => {\r\n    cx.setLineDash([]);\r\n    cx.beginPath();\r\n    cx.fillStyle = this.color;\r\n    cx.font = `12px ${this.fontFamily}`;\r\n    const X1 = this.vertices[0] as any;\r\n    const X2 = this.vertices[1] as any;\r\n    const X3 = {\r\n      posX: X2.posX,\r\n      posY: X1.posY,\r\n    };\r\n    const X4 = {\r\n      posX: X1.posX,\r\n      posY: X2.posY,\r\n    };\r\n    const h = X1.posY - X2.posY;\r\n    const minVal = Math.min(X1.pair.realVal, X2.pair.realVal);\r\n    const maxVal = Math.max(X1.pair.realVal, X2.pair.realVal);\r\n    const yRatioArr = [0.236, 0.382, 0.5, 0.618, 0.764];\r\n    const colorArr = ['#E9C9C9', '#DEE9C9', '#C9E9DE', '#C9DEE9', '#DEE9C9', '#E9C9C9'];\r\n    let prevX = {};\r\n    let prevY = {};\r\n    yRatioArr.forEach((yRatio: number, index: number) => {\r\n      const curX = {\r\n        posX: X1.posX,\r\n        posY: X2.posY + yRatio * h,\r\n      };\r\n      const curY = {\r\n        posX: X2.posX,\r\n        posY: X2.posY + yRatio * h,\r\n      };\r\n      this.drawSegmentObject([curX, curY], 1, 0, cx);\r\n      if (index === 0) {\r\n        this.fillRegion([X2, X4, curX, curY], colorArr[index], cx);\r\n      } else {\r\n        this.fillRegion([prevY, prevX, curX, curY], colorArr[index], cx);\r\n      }\r\n      if (index === yRatioArr.length - 1) {\r\n        this.fillRegion([X3, X1, curX, curY], colorArr[0], cx);\r\n      }\r\n\r\n      // draw labels around temp points\r\n      const applyRatio = X1.posY > X2.posY ? yRatio : 1 - yRatio;\r\n      const val = maxVal - (maxVal - minVal) * applyRatio;\r\n      cx.fillText(`${yRatio.toFixed(3)} (${val.toFixed(2)})`, Math.min(curX.posX, curY.posX) - 100, curX.posY);\r\n\r\n      prevX = curX;\r\n      prevY = curY;\r\n    });\r\n    // draw labels around main points\r\n    cx.fillText('1', Math.min(X1.posX, X3.posX) - 50, X1.posY);\r\n    cx.fillText('0', Math.min(X4.posX, X2.posX) - 50, X2.posY);\r\n\r\n    this.drawSegmentObject([X1, X2], 1, 1, cx);\r\n    cx.lineWidth = this.lineWidth;\r\n    this.drawSegmentObject([X1, X3], this.lineWidth, 0, cx);\r\n    this.drawSegmentObject([X4, X2], this.lineWidth, 0, cx);\r\n  };\r\n\r\n  drawObject = (cx: any, chartRect: any) => {\r\n    if (this.type === 2) {\r\n      this.drawArrowObject(cx);\r\n    } else if (this.type === 3) {\r\n      this.drawRayLineObject(this.vertices, cx, chartRect);\r\n    } else if (this.type === 4) {\r\n      this.drawTrendLineObject(cx, chartRect);\r\n    } else if (this.type === 5) {\r\n      this.drawTrendLineObject(cx, chartRect);\r\n    } else if (this.type === 6) {\r\n      this.drawPitchforkObject(cx, chartRect);\r\n    } else if (this.type === 7) {\r\n      this.drawTextObject(cx);\r\n    } else if (this.type === 8) {\r\n      this.drawChannel(cx);\r\n    } else if (this.type === 9) {\r\n      this.drawFibonacci(cx);\r\n    } else if (this.type === 10) {\r\n      this.drawPolygonObject(cx);\r\n    }\r\n\r\n    if (this.type !== 7) {\r\n      this.drawVertex(cx, chartRect);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * functions for moving of vertices\r\n   */\r\n  setVertex = (curVertex: number, posX: number, posY: number, pair: any) => {\r\n    const prevPos = this.vertices[curVertex] as any;\r\n    // calculate and reset third vertex when moving former 2 vertices for channel\r\n    if (this.type === 8 && curVertex < 2 && this.vertices.length === 3) {\r\n      const X1 = this.vertices[0] as any;\r\n      const X2 = this.vertices[1] as any;\r\n      const X3 = this.vertices[2] as any;\r\n      const { X4, X5 } = this.getChannelDrawPoints(X1, X2, X3);\r\n      if (curVertex === 0) {\r\n        X3.posX = (X5.posX + X4.posX - (prevPos.posX - posX)) / 2;\r\n        X3.posY = (X5.posY + X4.posY - (prevPos.posY - posY)) / 2;\r\n      } else {\r\n        X3.posX = (X4.posX + X5.posX - (prevPos.posX - posX)) / 2;\r\n        X3.posY = (X4.posY + X5.posY - (prevPos.posY - posY)) / 2;\r\n      }\r\n    }\r\n    prevPos.posX = posX;\r\n    prevPos.posY = posY;\r\n    prevPos.pair = pair;\r\n  };\r\n\r\n  selectVertex = (val: boolean, index: number) => {\r\n    (this.vertices[index] as any).selected = val;\r\n  };\r\n\r\n  selectVertices = (val: boolean) => {\r\n    this.vertices.forEach((vertex: any) => {\r\n      vertex.selected = val;\r\n    });\r\n  };\r\n\r\n  moveVertices = (offsetX: number, offsetY: number, drawingRect: any, timeRange: any, candleData: any) => {\r\n    this.vertices.forEach((vertex: any) => {\r\n      vertex.posX = vertex.posX + offsetX;\r\n      vertex.posY = vertex.posY + offsetY;\r\n      // vertex.pair = getCurTimeValuePair(vertex, drawingRect, timeRange, candleData);\r\n    });\r\n  };\r\n\r\n  scaleMoveVertices = (\r\n    scaleRatioX: number,\r\n    scaleRatioY1: number,\r\n    scaleRatioY2: number,\r\n    scaleBaseX: number,\r\n    scaleBaseY1: number,\r\n    scaleBaseY2: number,\r\n    drawingRect: any,\r\n    timeRange: any,\r\n    candleData: any,\r\n  ) => {\r\n    this.vertices.forEach((vertex: any) => {\r\n      vertex.posX = scaleBaseX - (scaleBaseX - vertex.posX) * scaleRatioX;\r\n      vertex.posY = scaleBaseY1 + (vertex.posY - scaleBaseY1) * scaleRatioY1;\r\n      vertex.posY = scaleBaseY2 - (scaleBaseY2 - vertex.posY) * scaleRatioY2;\r\n      // vertex.pair = getCurTimeValuePair(vertex, drawingRect, timeRange, candleData);\r\n    });\r\n  };\r\n\r\n  selectMyself = (val: boolean, vertexSelect: boolean) => {\r\n    this.selected = val;\r\n    if (vertexSelect) {\r\n      this.selectVertices(val);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * functions to check if object is selectable\r\n   */\r\n  getLineBounding = (X3: any, X4: any) => {\r\n    const deltaX = (X4 as any).posX - (X3 as any).posX;\r\n    const deltaY = (X3 as any).posY - (X4 as any).posY;\r\n    const degree = Math.atan(deltaY / deltaX);\r\n    const offsetX = (this.lineWidth / 2) * Math.sin(degree);\r\n    const offsetY = (this.lineWidth / 2) * Math.cos(degree);\r\n    return [\r\n      {\r\n        posX: (X3 as any).posX - offsetX,\r\n        posY: (X3 as any).posY - offsetY,\r\n      },\r\n      {\r\n        posX: (X3 as any).posX + offsetX,\r\n        posY: (X3 as any).posY + offsetY,\r\n      },\r\n      {\r\n        posX: (X4 as any).posX + offsetX,\r\n        posY: (X4 as any).posY + offsetY,\r\n      },\r\n      {\r\n        posX: (X4 as any).posX - offsetX,\r\n        posY: (X4 as any).posY - offsetY,\r\n      },\r\n    ];\r\n  };\r\n\r\n  isHitInPath = (posX: number, posY: number, path: any, cx: any) => {\r\n    cx.beginPath();\r\n    cx.moveTo((path[0] as any).posX, (path[0] as any).posY);\r\n    for (let i = 1; i < path.length; i++) {\r\n      const vertex: any = path[i];\r\n      cx.lineTo(vertex.posX, vertex.posY);\r\n    }\r\n    // make the object closed\r\n    cx.closePath();\r\n    return cx.isPointInPath(posX, posY);\r\n  };\r\n\r\n  isHitOnSegment = (posX: number, posY: number, X1: any, X2: any, cx: any) => {\r\n    const path = this.getLineBounding(X1, X2);\r\n    return this.isHitInPath(posX, posY, path, cx);\r\n  };\r\n\r\n  isHitOnRay = (posX: number, posY: number, X1: any, X2: any, cx: any, chartRect: any) => {\r\n    const intersection = this.getIntersectionWithPanel(X1, X2, chartRect);\r\n    const X3 = intersection[0];\r\n    const X4 = intersection[1];\r\n    let path = {};\r\n    if ((X2 as any).posY < (X1 as any).posY) {\r\n      path = this.getLineBounding(X1, X4);\r\n    } else {\r\n      path = this.getLineBounding(X1, X3);\r\n    }\r\n    return this.isHitInPath(posX, posY, path, cx);\r\n  };\r\n\r\n  isHitOnLine = (posX: number, posY: number, X1: any, X2: any, cx: any, chartRect: any) => {\r\n    const intersection = this.getIntersectionWithPanel(X1, X2, chartRect);\r\n    const X3 = intersection[0];\r\n    const X4 = intersection[1];\r\n    const path = this.getLineBounding(X3, X4);\r\n    return this.isHitInPath(posX, posY, path, cx);\r\n  };\r\n\r\n  isHitOnEllipse = (posX: number, posY: number, circle: any) => {\r\n    return Math.sqrt((posX - circle.posX) ** 2 + (posY - circle.posY) ** 2) < circle.radius;\r\n  };\r\n\r\n  isHitOnObject = (posX: number, posY: number, cx: any, chartRect: any) => {\r\n    let selectedVertexTemp = -1;\r\n    let selectedSegment = -1;\r\n    let isObjectSelected = false;\r\n    this.vertices.forEach((vertex: any, index: number) => {\r\n      if (this.isHitOnEllipse(posX, posY, { ...vertex, radius: this.lineWidth * 2 })) {\r\n        selectedVertexTemp = index;\r\n      }\r\n    });\r\n    if (this.type === 2) {\r\n      // arrow line\r\n      isObjectSelected = this.isHitOnSegment(posX, posY, this.vertices[0], this.vertices[1], cx);\r\n    } else if (this.type === 3) {\r\n      // ray line\r\n      isObjectSelected = this.isHitOnRay(posX, posY, this.vertices[0], this.vertices[1], cx, chartRect);\r\n    } else if (this.type === 5 || this.type === 4) {\r\n      // trend line, extended line\r\n      isObjectSelected = this.isHitOnLine(posX, posY, this.vertices[0], this.vertices[1], cx, chartRect);\r\n    } else if (this.type === 6) {\r\n      const X1 = this.vertices[0];\r\n      const X2 = this.vertices[1];\r\n      const X3 = this.vertices[2];\r\n      const { X4, X5, X6, X7, X8, X9, X10 } = this.getPitchforkDrawPoints(X1, X2, X3, chartRect);\r\n      isObjectSelected =\r\n        this.isHitOnSegment(posX, posY, X2, X3, cx) ||\r\n        this.isHitOnRay(posX, posY, X1, X4, cx, chartRect) ||\r\n        this.isHitOnRay(posX, posY, X3, X7, cx, chartRect) ||\r\n        this.isHitOnRay(posX, posY, X2, X8, cx, chartRect) ||\r\n        this.isHitOnRay(posX, posY, X5, X9, cx, chartRect) ||\r\n        this.isHitOnRay(posX, posY, X6, X10, cx, chartRect);\r\n    } else if (this.type === 7) {\r\n      const X1 = this.vertices[0];\r\n      const width = this.text.length * this.fontSize;\r\n      const height = this.fontSize;\r\n      const X2 = {\r\n        posX: (X1 as any).posX + width,\r\n        posY: (X1 as any).posY,\r\n      };\r\n      const X3 = {\r\n        posX: (X1 as any).posX + width,\r\n        posY: (X1 as any).posY + height,\r\n      };\r\n      const X4 = {\r\n        posX: (X1 as any).posX,\r\n        posY: (X1 as any).posY + height,\r\n      };\r\n      isObjectSelected = this.isHitInPath(posX, posY, [X1, X2, X3, X4], cx);\r\n    } else if (this.type === 8) {\r\n      const X1 = this.vertices[0];\r\n      const X2 = this.vertices[1];\r\n      const X3 = this.vertices[2];\r\n      const { X4, X5 } = this.getChannelDrawPoints(X1, X2, X3);\r\n      isObjectSelected = this.isHitInPath(posX, posY, [X1, X2, X5, X4], cx);\r\n    } else if (this.type === 9) {\r\n      const X1 = this.vertices[0] as any;\r\n      const X2 = this.vertices[1] as any;\r\n      const X3 = {\r\n        posX: X2.posX,\r\n        posY: X1.posY,\r\n      };\r\n      const X4 = {\r\n        posX: X1.posX,\r\n        posY: X2.posY,\r\n      };\r\n      isObjectSelected = this.isHitOnSegment(posX, posY, X1, X3, cx) || this.isHitOnSegment(posX, posY, X2, X4, cx);\r\n    } else if (this.type === 10) {\r\n      selectedSegment = this.vertices.findIndex(\r\n        (vertex: any, index) => this.isHitOnSegment(\r\n          posX,\r\n          posY,\r\n          vertex,\r\n          this.vertices[index >= (this.vertices.length - 1) ? 0 : index + 1],\r\n          cx\r\n        )\r\n      );\r\n      isObjectSelected = selectedSegment >= 0;\r\n    }\r\n    return { selectedVertexTemp, isObjectSelected, selectedSegment };\r\n  };\r\n}\r\n\r\nexport const drawObjects = (objects: any, cx: any, chartRect: any, skip: number) => {\r\n  objects.forEach((object: any, index: number) => index !== skip && object.drawObject(cx, chartRect));\r\n};\r\n\r\nexport const selectObjects = (val: boolean, vertexSelect: boolean, objects: any) => {\r\n  objects.forEach((object: any) => object.selectMyself(val, vertexSelect));\r\n};\r\n\r\nexport const moveObjects = (offsetX: number, offsetY: number, objects: any) => {\r\n  objects.forEach((object: any) => object.moveVertices(offsetX, offsetY));\r\n};\r\n\r\nexport const getScaleBase = (chartRect: any) => {\r\n  const scaleBaseX = chartRect.width; // right end of the chart canvas panel\r\n  const candleRectHeight = chartRect.height * (69.976 / 100);\r\n  const scaleBaseY1 = candleRectHeight * 0.202381;\r\n  const scaleBaseY2 = candleRectHeight * (1 - 0.095238);\r\n  return { scaleBaseX, scaleBaseY1, scaleBaseY2 };\r\n};\r\n\r\nexport const scaledMoveObjects = (\r\n  scaleRatioX: number,\r\n  scaleRatioY1: number,\r\n  scaleRatioY2: number,\r\n  chartRect: object,\r\n  objects: any,\r\n  timeRange: any,\r\n  candleData: any,\r\n) => {\r\n  const { scaleBaseX, scaleBaseY1, scaleBaseY2 } = getScaleBase(chartRect);\r\n  objects.forEach((object: any) => {\r\n    object.scaleMoveVertices(\r\n      scaleRatioX,\r\n      scaleRatioY1,\r\n      scaleRatioY2,\r\n      scaleBaseX,\r\n      scaleBaseY1,\r\n      scaleBaseY2,\r\n      chartRect,\r\n      timeRange,\r\n      candleData,\r\n    );\r\n  });\r\n};\r\n\r\nexport const getSelectedObject = (posX: number, posY: number, objects: any, cx: any, chartRect: any) => {\r\n  let selectedObject = -1;\r\n  let selectedVertex = -1;\r\n  let selectedSegment = -1;\r\n\r\n  for (let index = 0; index < objects.length; index++) {\r\n    const object = objects[index];\r\n    const { selectedVertexTemp, isObjectSelected, selectedSegment: selectedSegmentTemp } = object.isHitOnObject(posX, posY, cx, chartRect);\r\n    \r\n    // selected vertex or other part of the object\r\n    if (selectedVertexTemp >= 0) {\r\n      // selected vertex\r\n      selectedVertex = selectedVertexTemp;\r\n      selectedObject = index;\r\n      break;\r\n    } else if (isObjectSelected === true) {\r\n      // selected, but not vertex\r\n      selectedObject = index;\r\n      selectedSegment = selectedSegmentTemp;\r\n      break;\r\n    }\r\n  }\r\n  return { selectedObject, selectedVertex, selectedSegment };\r\n};\r\n\r\nexport const getLineWidth = (X: Vertex, Y: Vertex) => {\r\n  const deltaX = X.posX - Y.posX;\r\n  const deltaY = X.posY - Y.posY;\r\n  return Math.sqrt(deltaX*deltaX + deltaY*deltaY);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\nimport './index.css';\r\n\r\ninterface SettingModalProps {\r\n  settingValues: {\r\n    width: number\r\n  };\r\n  setSettingValues: (apply: boolean, value: string) => void;\r\n}\r\n\r\nconst SettingModal = ({ settingValues, setSettingValues }: SettingModalProps) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    setValue(settingValues.width.toString());\r\n  }, [settingValues]);\r\n\r\n  useEffect(() => {\r\n    $('.setting-modal-header').on('mousedown', function (e: any) {\r\n      const startPosX = e.pageX;\r\n      const startPosY = e.pageY;\r\n      const top = $('.setting-modal')\r\n        .css('top')\r\n        .slice(0, -2);\r\n      const left = $('.setting-modal')\r\n        .css('left')\r\n        .slice(0, -2);\r\n      $('.setting-modal-header').on('mousemove', function (e1: any) {\r\n        const curPosX = e1.pageX;\r\n        const curPosY = e1.pageY;\r\n        $('.setting-modal').css('top', 1 * parseInt(top) + curPosY - startPosY + 'px');\r\n        $('.setting-modal').css('left', 1 * parseInt(left) + curPosX - startPosX + 'px');\r\n      });\r\n    });\r\n    $('.setting-modal-header').on('mouseup', function () {\r\n      $('.setting-modal-header').off('mousemove');\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"setting-modal\">\r\n      <div className=\"setting-modal-header\">\r\n        <h5>Setting</h5>\r\n        <div className=\"icon-close\" onClick={() => setSettingValues(false, value)} />\r\n      </div>\r\n      <div className=\"setting-modal-body\">\r\n        <input value={value} onChange={e => setValue(e.target.value)} />\r\n      </div>\r\n      <div className=\"setting-modal-footer\">\r\n        <button className=\"btn-setting btn btn-primary\" onClick={() => setSettingValues(true, value)}>\r\n          OK\r\n        </button>\r\n        <button className=\"btn-close btn btn-secondary\" onClick={() => setSettingValues(false, value)}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSettingModal.propTypes = {\r\n  settingValues: PropTypes.object,\r\n  setSettingValues: PropTypes.func,\r\n};\r\n\r\nSettingModal.defaultProps = {\r\n  settingValues: {},\r\n  // setSettingValues: () => void\r\n};\r\n\r\nexport { SettingModal };","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { DrawingObject, selectObjects, getSelectedObject, getLineWidth } from './DrawingApi';\r\nimport { SettingModal } from '../components/SettingModal';\r\n\r\nconst points = [\r\n  { posX: 100, posY: 100, selected: false },\r\n  { posX: 300, posY: 100, selected: false },\r\n  { posX: 300, posY: 300, selected: false },\r\n  { posX: 100, posY: 300, selected: false }\r\n];\r\n\r\nfunction DrawingPanel() {\r\n  let chartRect = {\r\n    width: 800,\r\n    height: 800\r\n  };\r\n\r\n  const [openSettingModal, setOpenSettingModal] = useState(false);\r\n  const [selected, setSelected] = useState({\r\n    curSelectedSegment: -1,\r\n    curSelectedObject: -1,\r\n    curSelectedVertex: -1\r\n  });\r\n  const [params, setParams] = useState({\r\n    width: 100\r\n  });\r\n  let drawingObjects = useRef<DrawingObject[]>([]);\r\n  let cx = useRef<CanvasRenderingContext2D>();\r\n  let canvasPanel = useRef<HTMLCanvasElement>();\r\n\r\n  const setupCanvas = useCallback(() => {\r\n    const can = document.querySelector('#custom-canvas') as HTMLCanvasElement;\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const rect = can.getBoundingClientRect();\r\n    can.width = rect.width * dpr;\r\n    can.height = rect.height * dpr;\r\n\r\n    const ctx = can.getContext('2d') as CanvasRenderingContext2D;\r\n    ctx.scale(dpr, dpr);\r\n    cx.current = ctx;\r\n  }, []);\r\n\r\n  const updateCanvas = useCallback(() => {\r\n    (cx as any).current.clearRect(0, 0, chartRect.width, chartRect.height);\r\n    drawingObjects.current.forEach(drawing => drawing.drawObject(cx.current, chartRect));\r\n  }, [chartRect]);\r\n\r\n  const initCanvasPanel = useCallback(() => {\r\n    setupCanvas();\r\n    updateCanvas();\r\n  }, [updateCanvas, setupCanvas]);\r\n\r\n  const handleClickOnPanel = useCallback((e: any) => {\r\n    const { layerX, layerY } = e;\r\n\r\n    selectObjects(false, true, drawingObjects.current);\r\n    const { selectedObject, selectedVertex, selectedSegment } = getSelectedObject(\r\n      layerX,\r\n      layerY,\r\n      drawingObjects.current,\r\n      cx.current,\r\n      chartRect,\r\n    );\r\n    \r\n    if (selectedObject >= 0) {\r\n      setSelected({ ...selected, curSelectedObject: selectedObject })\r\n      drawingObjects.current[selectedObject].selectMyself(true, false);\r\n      if (selectedVertex >= 0) {\r\n        setSelected({\r\n          ...selected,\r\n          curSelectedObject: selectedObject,\r\n          curSelectedVertex: selectedVertex\r\n        });\r\n        drawingObjects.current[selectedObject].selectVertex(true, selectedVertex);\r\n        updateCanvas();\r\n      } else if (selectedSegment >= 0) {\r\n        setSelected({\r\n          ...selected,\r\n          curSelectedObject: selectedObject,\r\n          curSelectedSegment: selectedSegment\r\n        });\r\n        const vertice = [...drawingObjects.current[selectedObject].vertices];\r\n        const X = vertice[selectedSegment];\r\n        const Y = vertice[selectedSegment >= vertice.length - 1 ? 0 : selectedSegment + 1];\r\n        const width = getLineWidth(X, Y);\r\n        setParams({ ...params, width });\r\n        setOpenSettingModal(true);\r\n      }\r\n    } else {\r\n      setOpenSettingModal(false);\r\n    }\r\n  }, [chartRect, params, selected, updateCanvas]);\r\n\r\n  const applySetting = (value: number) => {\r\n    const { curSelectedSegment, curSelectedObject } = selected;\r\n\r\n    let vertice = [...drawingObjects.current[curSelectedObject].vertices];\r\n    let X = vertice[curSelectedSegment];\r\n    let Y = vertice[curSelectedSegment >= vertice.length - 1 ? 0 : curSelectedSegment + 1];\r\n\r\n    if (X.posX === Y.posX) {\r\n      const flag = X.posY < Y.posY ? 1 : -1;\r\n      Y.posY = X.posY + flag * value;\r\n    } else if (X.posY === Y.posY) {\r\n      const flag = X.posX < Y.posX ? 1 : -1;\r\n      Y.posX = X.posX + flag * value;\r\n    }\r\n    vertice[curSelectedSegment] = X;\r\n    vertice[curSelectedSegment >= vertice.length - 1 ? 0 : curSelectedSegment + 1] = Y;\r\n    drawingObjects.current[curSelectedObject].vertices = [...vertice];\r\n\r\n    updateCanvas();\r\n  };\r\n\r\n  const setSettingValues = (apply: boolean, value: string) => {\r\n    apply && applySetting(parseInt(value));\r\n    setOpenSettingModal(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const newObjParams = {\r\n      type: 10,\r\n      color: '#fff',\r\n      selected: true,\r\n      vertexLen: points.length,\r\n      lineColor: '#000',\r\n      lineWidth: 5,\r\n      lineStyle: 0,\r\n      vertices: points\r\n    };\r\n    const newObj = new DrawingObject(newObjParams);\r\n    drawingObjects.current.push(newObj);\r\n\r\n    initCanvasPanel();\r\n    \r\n    canvasPanel.current = document.querySelector('#custom-canvas') as HTMLCanvasElement;\r\n    canvasPanel.current.addEventListener('click', handleClickOnPanel);\r\n\r\n    return () => {\r\n      (canvasPanel.current as any).removeEventListener('click', handleClickOnPanel);\r\n    }\r\n  }, [handleClickOnPanel, initCanvasPanel]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"custom-canvas\" style={chartRect}></canvas>\r\n      {openSettingModal && (\r\n        <SettingModal\r\n          settingValues={params}\r\n          setSettingValues={setSettingValues}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrawingPanel;","import React from 'react';\nimport DrawingPanel from './canvas/DrawingPanel';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DrawingPanel />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}